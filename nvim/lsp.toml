# ============================================================================
# LSP Configuration
# ============================================================================

[[plugins]]
repo ='dense-analysis/ale'
on_i = 1
hook_add = '''
" Only run linters named in ale_linters settings.
let g:ale_linters_explicit = 1
" ale status
let g:ale_linter_aliases = {'vue': ['css', 'javascript', 'typescript']}
let g:ale_linters = {
      \   'ruby': ['rubocop'],
      \   'javascript': ['eslint'],
      \   'typescript': ['eslint'],
      \   'vue': ['eslint', 'stylelint'],
      \   'css': ['stylelint']
      \}
let b:ale_fixers = {'javascript': ['prettier', 'eslint']}
let g:ale_virtualtext_cursor = 'current'
let g:ale_virtualtext_cursor = 'disabled'
let g:ale_statusline_format = 'E'
let g:ale_echo_mgs_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%] [%...code...%]'

nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip'

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'

[[plugins]]
repo = 'neovim/nvim-lspconfig'
depends = 'ddc.vim'
hook_add = '''
lua << EOF
  local capabilities = vim.lsp.protocol.make_client_capabilities()
  capabilities.textDocument.completion.completionItem.snippetSupport = true
  require('lspconfig').html.setup {
    on_attach = on_attach,
    capabilities = capabilities,
  }
  require('lspconfig').cssls.setup {
    capabilities = capabilities
  }
  require('lspconfig').emmet_ls.setup {
    on_attach = on_attach,
    capabilities = capabilities,
  }
  require('lspconfig').solargraph.setup {
    on_attach = on_attach,
    capabilities = capabilities,
  }
  --[[
  require('lspconfig').tsserver.setup {
    on_attach,
    capabilities = capabilities,
    init_options = {
        preferences = {
            disableSuggestions = true,
        },
    },
  }
  ]]
  require('lspconfig').volar.setup {
    filetypes = { 'typescript', 'javascript', 'javascriptreact', 'typescriptreact', 'vue', 'json' }
  }
EOF
'''

[[plugins]]
repo = 'williamboman/mason.nvim'

[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'
on_source = 'nvim-lspconfig'
hook_add = '''
lua << EOF
  require("mason").setup()
  require("mason-lspconfig").setup {
    ensure_installed = { "cssls", "emmet_ls", "html", "solargraph", "volar" },
  }
EOF
'''
